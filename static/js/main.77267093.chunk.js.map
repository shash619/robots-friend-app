{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","filterRobots","this","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0NAeeA,EAbF,SAAC,GACb,IADcC,EACf,EADeA,KAAKC,EACpB,EADoBA,MAAMC,EAC1B,EAD0BA,GAE1B,OACC,sBAAKC,UAAU,uDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACE,6BAAKF,IACJ,4BAAIC,WCqBMK,EA3BA,SAAC,GACf,IADkBC,EACnB,EADmBA,OAElB,OAEC,8BAGEA,EAAOC,KAAI,SAACC,EAAKC,GAEhB,OAGC,cAAE,EAAF,CACER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHNS,SCCJC,EAdC,SAAC,GACjB,EADkBC,YACjB,IAD6BC,EAC9B,EAD8BA,aAE7B,OACE,qBAAKV,UAAU,MAAf,SACE,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,oBACZC,SAAUH,OCAAI,EARF,SAACC,GAEb,OACC,qBAAKC,MAAO,CAACC,SAAS,SAASC,OAAO,kBAAkBC,OAAO,SAA/D,SACCJ,EAAMK,YC6CMC,G,wDA3Cd,aAAc,IAAD,8BACZ,gBAYDC,eAAe,SAACC,GAEf,EAAKC,SAAS,CAACf,YAAYc,EAAME,OAAOC,SAbxC,EAAKC,MAAM,CACVvB,OAAO,GACPK,YAAY,IAJD,E,qDAOb,WACC,IAAD,OACCmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAvB,GAAI,OAAE,EAAKkB,SAAS,CAACpB,OAAOE,S,oBAMnC,WACC,IAAD,OACO0B,EAAeC,KAAKN,MAAMvB,OAAO8B,QAAO,SAAAC,GAC7C,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS,EAAKV,MAAMlB,YAAY2B,kBAGjE,OAA8B,IAA3BH,KAAKN,MAAMvB,OAAOkC,OAGnB,yCAIF,sBAAKtC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,oBACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAS4B,a,GApCHO,cCMHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OACP,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKlCX,M","file":"static/js/main.77267093.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,id})=>\r\n{\r\nreturn(\r\n\t<div className='tc bg-light-green dib br3  pa3 ma2 grow bw2 shadow-5'>\r\n\t\t<img alt='robots' src={`https://robohash.org/${id}?size=200x200`}/>\r\n\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t\t<p>{email}</p>\r\n\t\t</div>\r\n\r\n\t</div>\r\n\t);\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from  './Card';\r\n\r\nconst CardList=({  robots })=>\r\n{\r\n\treturn(\r\n\r\n\t\t<div>\r\n\t\t\t{\r\n\r\n\t\t\t\trobots.map((user,i)=>\r\n\t\t\t\t{\r\n\t\t\t\t\treturn (\r\n\r\n\r\n\t\t\t\t\t\t< Card  key={i}\r\n\t\t\t\t\t\t\t\tid={robots[i].id}\r\n\t\t\t\t\t\t\t\tname={robots[i].name}\r\n\t\t\t\t\t\t\t\temail={robots[i].email}\r\n\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\r\n\t\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox=({searchfield,searchChange})=>\r\n{\r\n\treturn(\r\n\t\t\t<div className='pa2'>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\tclassName='pa2 ba b--green bg-lightest-blue'\r\n\t\t\t\t\ttype='search'\r\n\t\t\t\t\tplaceholder=\"enter robots name\" \r\n\t\t\t\t\tonChange={searchChange}\r\n\t\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll=(props)=>\r\n{\r\n\treturn(\r\n\t\t<div style={{overflow:'scroll',border:'1px solid black',height:'500px'}}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n};\r\nexport default Scroll;","import React, { Component }from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from'../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends Component\r\n{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\trobots:[],\r\n\t\t\tsearchfield:''\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=>response.json())\r\n\t\t.then(user=>this.setState({robots:user}));\r\n\t}\r\n\tonSearchChange=(event)=>\r\n\t{\r\n\t\tthis.setState({searchfield:event.target.value});\r\n\t}\r\n\trender()\r\n\t{\r\n\t\tconst filterRobots = this.state.robots.filter(robot=>{\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\r\n\t\t})\r\n\t\tif(this.state.robots.length===0)\r\n\t\t{\r\n\t\t\treturn(\r\n\t\t\t\t<h1>loading</h1>);\r\n\t\t}\r\n\t\telse{\r\n\t\treturn(\r\n\t\t<div className='tc'>\r\n\t\t<h1 className='f1'>ROBOTS</h1>\r\n\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t<Scroll>\r\n\t\t<CardList robots={ filterRobots } />\r\n\t\t</Scroll>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n\t}\r\n\t\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n\t\t<App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}